{"version":3,"sources":["context/initial.js","context/index.js","components/Menu/constants.js","assets/global/tokens.js","components/Menu/styled.js","components/Menu/index.js","assets/global/styled.js","components/Header/styled.js","assets/images/pokemon-logo.png","components/Header/index.js","components/Pokemon/Item/styled.js","components/Pokemon/Item/index.js","containers/PokemonsList/styled.js","api/config.js","api/index.js","containers/PokemonsList/index.js","containers/GenerationsList/styled.js","containers/GenerationsList/index.js","containers/PokemonDetail/styled.js","containers/PokemonDetail/index.js","containers/PokemonsByGeneration/styled.js","containers/PokemonsByGeneration/index.js","assets/images/icon-pokeball.svg","components/Loading/styled.js","components/Loading/index.js","containers/App/index.js","reportWebVitals.js","index.js"],"names":["initialValues","pokemons","pokemonDetail","generations","pokemonsByGeneration","currentGeneration","isLoading","Context","createContext","GlobalState","children","useState","state","setState","Provider","value","links","label","url","colors","white","black","gray25","gray50","gray75","gray100","gray300","yellow300","blue300","fonts","StyledMenu","styled","nav","StyledMenuList","ul","StyledMenuItem","li","Menu","useContext","location","useLocation","pathname","map","link","index","to","onClick","prevState","StyledWrapper","div","StyledHeader","header","StyledLogo","h1","Header","data-testid","title","src","LogoPokemon","width","height","alt","StyledItem","StyledItemImg","PokemonItem","name","id","StyledSection","section","StyledTitle","h2","StyledList","PokemonInstance","axios","create","baseURL","getPokemons","method","getPokemonByName","getGenerations","getPokemonsByGeneration","PokemonsList","useEffect","a","payload","data","results","setTimeout","console","log","getPokemonsList","length","pokemon","substring","lastIndexOf","StyledGenerations","GenerationsList","getGenerationsList","formatGenerationName","generation","split","toUpperCase","types","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","StyledContent","StyledImage","StyledTypes","StyledBadge","p","props","type","lighten","darken","grey50","StyledInfo","StyledLabel","StyledBar","StyledProgress","progress","StyledRow","PokemonDetail","useParams","getPokemonDetailByName","base_experience","weight","abilities","ability","stats","stat","base_stat","PokemonsByGeneration","pokemon_species","getPokemonsGenerationList","rotate","keyframes","StyledLoading","css","Loading","IconPokeball","App","Fragment","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e77e0bd8.chunk.js","sourcesContent":["const initialValues = {\n  pokemons: [],\n  pokemonDetail: {},\n  generations: [],\n  pokemonsByGeneration: [],\n  currentGeneration: 'Generation I',\n  isLoading: true\n};\n\nexport default initialValues;\n","import React, { useState, createContext } from 'react';\nimport initialValues from './initial';\n\nconst Context = createContext(initialValues);\n\nconst GlobalState = ({ children }) => {\n  const [state, setState] = useState(initialValues);\n\n  return (\n    <Context.Provider value={{ state, setState }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport { GlobalState, Context };\n","const links = [\n  { label: 'Home', url: '/' },\n  { label: 'Generations', url: '/generations' }\n];\n\nexport default links;\n","import 'typeface-exo-2';\nimport 'typeface-open-sans';\n\nexport const colors = {\n  white: '#ffffff',\n  black: '#000000',\n  gray25: '#fafafa',\n  gray50: '#f8f8f8',\n  gray75: '#eeeeee',\n  gray100: '#dddddd',\n  gray300: '#333333',\n  yellow300: '#ffcc00',\n  blue300: '#006cb7'\n};\n\nexport const fonts = {\n  primary: \"'Exo 2', sans-serif\",\n  secondary: \"'Open Sans', sans-serif\"\n};\n","import styled from 'styled-components';\nimport { colors, fonts } from 'assets/global/tokens';\n\nexport const StyledMenu = styled.nav`\n  display: block;\n`;\n\nexport const StyledMenuList = styled.ul`\n  display: flex;\n  justify-content: flex-end;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const StyledMenuItem = styled.li`\n  margin-left: 20px;\n\n  a {\n    position: relative;\n    display: inline-block;\n    padding: 3px 0;\n    font-family: ${fonts.primary};\n    font-size: 20px;\n    font-weight: 600;\n    color: ${colors.gray300};\n    text-decoration: none;\n    transition: all 0.4s ease-out;\n\n    &:before,\n    &:after {\n      position: absolute;\n      bottom: 0;\n      width: 0;\n      height: 3px;\n      background-color: ${colors.gray300};\n      transition: all 0.4s ease-out;\n      content: '';\n    }\n\n    &:before {\n      left: 0;\n    }\n\n    &:after {\n      right: 0;\n    }\n\n    &:hover {\n      color: ${colors.blue300};\n\n      &:before,\n      &:after {\n        width: 100%;\n        background-color: ${colors.blue300};\n      }\n    }\n\n    @media screen and (max-width: 420px) {\n      font-size: 16px;\n    }\n  }\n`;\n","import React, { useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Context } from 'context';\nimport links from './constants';\nimport { StyledMenu, StyledMenuList, StyledMenuItem } from './styled';\n\nconst Menu = () => {\n  const { setState } = useContext(Context);\n  const location = useLocation();\n  const pathname = location?.pathname;\n\n  return (\n    <StyledMenu>\n      <StyledMenuList>\n        {links.map((link, index) => {\n          const { label, url } = link;\n\n          return (\n            <StyledMenuItem key={index}>\n              <Link\n                to={url}\n                onClick={() => {\n                  setState((prevState) => ({\n                    ...prevState,\n                    isLoading: pathname === url ? false : true\n                  }));\n                }}\n              >\n                {label}\n              </Link>\n            </StyledMenuItem>\n          );\n        })}\n      </StyledMenuList>\n    </StyledMenu>\n  );\n};\n\nexport default Menu;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  max-width: 1080px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n","import styled from 'styled-components';\nimport { StyledWrapper } from 'assets/global/styled';\nimport { colors } from 'assets/global/tokens';\n\nexport const StyledHeader = styled.header`\n  display: block;\n  width: 100%;\n  background-color: ${colors.gray100};\n\n  ${StyledWrapper} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n\n    @media screen and (max-width: 520px) {\n      justify-content: center;\n    }\n  }\n`;\n\nexport const StyledLogo = styled.h1`\n  display: block;\n  max-width: 300px;\n  margin: 0;\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  @media screen and (max-width: 520px) {\n    display: block;\n    width: 100%;\n    text-align: center;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/pokemon-logo.68ca8022.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Menu from 'components/Menu';\nimport { StyledWrapper } from 'assets/global/styled';\nimport { StyledHeader, StyledLogo } from './styled';\nimport LogoPokemon from 'assets/images/pokemon-logo.png';\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <StyledWrapper>\n        <StyledLogo data-testid=\"logo\">\n          <Link to=\"/\" title=\"Home\">\n            <img\n              src={LogoPokemon}\n              width=\"150\"\n              height=\"auto\"\n              alt=\"Pokémon\"\n            />\n          </Link>\n        </StyledLogo>\n        <Menu />\n      </StyledWrapper>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport { colors, fonts } from 'assets/global/tokens';\n\nexport const StyledItem = styled.div`\n  flex: 1 1 auto;\n  width: 25%;\n  padding: 10px;\n  margin: 10px;\n  background-color: ${colors.gray75};\n  border-radius: 10px;\n  transition: all 0.4s ease-out;\n\n  a {\n    color: ${colors.gray300};\n    text-decoration: none;\n  }\n\n  h3 {\n    margin: 0;\n    padding: 10px;\n    font-family: ${fonts.primary};\n    font-size: 20px;\n\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n\n  &:hover {\n    background-color: ${colors.gray100};\n\n    img {\n      transform: scale(1.2);\n      transform: scale3d(1.2, 1.2, 1.2);\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 40%;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nexport const StyledItemImg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 200px;\n\n  img {\n    display: block;\n    max-width: 100px;\n    height: auto;\n    margin: 0;\n    transition: all 0.4s ease-out;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from 'context';\nimport { StyledItem, StyledItemImg } from './styled';\n\nconst PokemonItem = ({ name, id }) => {\n  const { setState } = useContext(Context);\n\n  return (\n    <StyledItem>\n      <Link\n        to={`/pokemon/${name}`}\n        title={name}\n        onClick={() => {\n          setState((prevState) => ({\n            ...prevState,\n            isLoading: true\n          }));\n        }}\n      >\n        <StyledItemImg>\n          <img\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\n            alt={name}\n          />\n        </StyledItemImg>\n        <h3>{name}</h3>\n      </Link>\n    </StyledItem>\n  );\n};\n\nexport default PokemonItem;\n","import styled from 'styled-components';\nimport { fonts } from 'assets/global/tokens';\n\nexport const StyledSection = styled.section`\n  display: block;\n  width: 100%;\n  padding: 50px 0;\n`;\n\nexport const StyledTitle = styled.h2`\n  font-family: ${fonts.primary};\n  font-size: 32px;\n  font-weight: 700;\n\n  @media screen and (max-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin: -10px;\n  padding: 0;\n`;\n","import axios from 'axios';\n\nconst PokemonInstance = axios.create({\n  baseURL: 'https://pokeapi.co/api/v2/'\n});\n\nexport default PokemonInstance;\n","import PokemonInstance from './config';\n\nexport const getPokemons = () => {\n  return PokemonInstance({\n    method: 'get',\n    url: `/pokemon?limit=151`\n  });\n};\n\nexport const getPokemonByName = (name) => {\n  return PokemonInstance({\n    method: 'get',\n    url: `/pokemon/${name}`\n  });\n};\n\nexport const getGenerations = () => {\n  return PokemonInstance({\n    method: 'get',\n    url: `/generation/`\n  });\n};\n\nexport const getPokemonsByGeneration = (id) => {\n  return PokemonInstance({\n    method: 'get',\n    url: `/generation/${id}`\n  });\n};\n","import React, { useEffect, useContext } from 'react';\nimport { Context } from 'context';\nimport PokemonItem from 'components/Pokemon/Item';\nimport { StyledWrapper } from 'assets/global/styled';\nimport { StyledSection, StyledTitle, StyledList } from './styled';\nimport { getPokemons } from 'api';\n\nconst PokemonsList = () => {\n  const { state, setState } = useContext(Context);\n  const { pokemons } = state;\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true\n    }));\n\n    async function getPokemonsList() {\n      try {\n        const payload = await getPokemons();\n        const data = payload?.data || {};\n\n        if (data) {\n          setState((prevState) => ({\n            ...prevState,\n            pokemons: data.results || []\n          }));\n\n          setTimeout(() => {\n            setState((prevState) => ({\n              ...prevState,\n              isLoading: false\n            }));\n          }, 1500);\n        }\n        return data;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getPokemonsList();\n  }, [setState]);\n\n  return (\n    <StyledSection>\n      <StyledWrapper>\n        <StyledTitle>Generation I</StyledTitle>\n        <StyledList>\n          {pokemons.length > 0 &&\n            pokemons.map((pokemon, index) => {\n              const { name, url } = pokemon;\n              const id = url.substring(\n                url.lastIndexOf('/pokemon/') + 9,\n                url.length - 1\n              );\n\n              return <PokemonItem key={index} name={name} id={id} />;\n            })}\n        </StyledList>\n      </StyledWrapper>\n    </StyledSection>\n  );\n};\n\nexport default PokemonsList;\n","import styled from 'styled-components';\nimport { colors, fonts } from 'assets/global/tokens';\n\nexport const StyledSection = styled.section`\n  display: block;\n  width: 100%;\n  padding: 50px 0;\n`;\n\nexport const StyledGenerations = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: -10px;\n\n  a {\n    flex: 1 1 auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 30%;\n    min-height: 150px;\n    margin: 10px;\n    padding: 30px;\n    font-family: ${fonts.primary};\n    font-size: 24px;\n    font-weight: 700;\n    color: ${colors.gray300};\n    text-decoration: none;\n    border: 1px solid ${colors.gray100};\n    border-radius: 30px;\n    transition: all 0.2s ease-in-out;\n\n    @media screen and (max-width: 420px) {\n      width: 100%;\n      min-height: 80px;\n      font-size: 16px;\n    }\n\n    &:hover {\n      color: ${colors.white};\n      background-color: ${colors.blue300};\n    }\n  }\n`;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from 'context';\nimport { getGenerations } from 'api';\nimport { StyledWrapper } from 'assets/global/styled';\nimport { StyledSection, StyledGenerations } from './styled';\n\nconst GenerationsList = () => {\n  const { state, setState } = useContext(Context);\n  const { generations } = state;\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true\n    }));\n\n    async function getGenerationsList() {\n      try {\n        const payload = await getGenerations();\n        const data = payload?.data || {};\n\n        if (data) {\n          setState((prevState) => ({\n            ...prevState,\n            generations: data.results || []\n          }));\n\n          setTimeout(() => {\n            setState((prevState) => ({\n              ...prevState,\n              isLoading: false\n            }));\n          }, 1500);\n        }\n        return data;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getGenerationsList();\n  }, [setState]);\n\n  const formatGenerationName = (name) => {\n    const generation = name.split('-')[1];\n\n    return `Generation ${generation.toUpperCase()}`;\n  };\n\n  return (\n    <StyledSection>\n      <StyledWrapper>\n        <StyledGenerations>\n          {generations.map((generation) => {\n            const { name, url } = generation;\n            const id = url.substring(\n              url.lastIndexOf('/generation/') + 12,\n              url.length - 1\n            );\n\n            return (\n              <Link\n                key={id}\n                to={`/generation/${id}`}\n                title={formatGenerationName(name)}\n                onClick={() => {\n                  setState((prevState) => ({\n                    ...prevState,\n                    currentGeneration: formatGenerationName(name)\n                  }));\n                }}\n              >\n                {formatGenerationName(name)}\n              </Link>\n            );\n          })}\n        </StyledGenerations>\n      </StyledWrapper>\n    </StyledSection>\n  );\n};\n\nexport default GenerationsList;\n","import styled from 'styled-components';\nimport { colors, fonts } from 'assets/global/tokens';\nimport { darken, lighten } from 'polished';\n\nconst types = {\n  fire: '#f42',\n  water: '#39f',\n  electric: '#fc3',\n  grass: '#7c5',\n  ice: '#6cf',\n  fighting: '#b54',\n  poison: '#a59',\n  ground: '#db5',\n  flying: '#89f',\n  psychic: '#f59',\n  bug: '#ab2',\n  rock: '#ba6',\n  ghost: '#66b',\n  dragon: '#76e',\n  dark: '#754',\n  steel: '#aab',\n  fairy: '#e9e'\n};\n\nexport const StyledSection = styled.section`\n  display: block;\n  width: 100%;\n  padding: 50px 0;\n`;\n\nexport const StyledTitle = styled.h2`\n  font-family: ${fonts.primary};\n  font-size: 32px;\n  font-weight: 700;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const StyledContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nexport const StyledImage = styled.div`\n  width: 48.5%;\n  padding: 16px;\n  text-align: center;\n  border: 1px solid ${colors.gray100};\n  border-radius: 10px;\n\n  p {\n    strong {\n      font-family: ${fonts.primary};\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n\n    img {\n      display: block;\n      max-width: 100%;\n      height: auto;\n      margin: 0 auto;\n    }\n  }\n`;\n\nexport const StyledTypes = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: -5px;\n`;\n\nexport const StyledBadge = styled.p`\n  display: inline-block;\n  margin: 5px;\n  padding: 5px 20px;\n  color: ${colors.gray300};\n  font-weight: 600;\n  background-color: ${(props) =>\n    props.type && types[props.type]\n      ? lighten(0.15, types[props.type])\n      : colors.white};\n  border: 1px solid\n    ${(props) =>\n      props.type && types[props.type]\n        ? darken(0.15, types[props.type])\n        : colors.grey50};\n  border-radius: 30px;\n`;\n\nexport const StyledInfo = styled.div`\n  width: 48.5%;\n  padding: 16px;\n  border: 1px solid ${colors.gray100};\n  border-radius: 10px;\n\n  p {\n    strong {\n      font-family: ${fonts.primary};\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n  }\n`;\n\nexport const StyledLabel = styled.div`\n  display: block;\n  margin-top: 10px;\n\n  > p {\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  &:first-child {\n    margin-top: 0;\n  }\n`;\n\nexport const StyledBar = styled.div`\n  position: relative;\n  display: block;\n  width: 100%;\n  background-color: ${colors.gray300};\n  border-radius: 30px;\n\n  p {\n    position: relative;\n    z-index: 10;\n    padding: 5px 10px;\n    font-size: 14px;\n    font-weight: 600;\n    color: ${colors.white};\n  }\n`;\n\nexport const StyledProgress = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n  width: ${(props) => props.progress && props.progress}%;\n  max-width: 100%;\n  height: 100%;\n  background-color: ${colors.blue300};\n  border-radius: 30px;\n`;\n\nexport const StyledRow = styled.div`\n  border-top: 1px solid ${colors.gray100};\n  padding: 5px;\n\n  p {\n    margin: 5px;\n  }\n\n  &:first-child,\n  &:first-of-type {\n    border-top: none;\n  }\n`;\n","import React, { useEffect, useContext } from 'react';\nimport { Context } from 'context';\nimport { useParams } from 'react-router-dom';\nimport { StyledWrapper } from 'assets/global/styled';\nimport {\n  StyledSection,\n  StyledTitle,\n  StyledContent,\n  StyledImage,\n  StyledTypes,\n  StyledBadge,\n  StyledInfo,\n  StyledLabel,\n  StyledBar,\n  StyledProgress,\n  StyledRow\n} from './styled';\nimport { getPokemonByName } from 'api';\n\nconst PokemonDetail = () => {\n  const { name } = useParams();\n  const { state, setState } = useContext(Context);\n  const { pokemonDetail } = state;\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true\n    }));\n\n    async function getPokemonDetailByName() {\n      try {\n        const payload = await getPokemonByName(name);\n        const data = payload?.data || {};\n\n        if (data) {\n          setState((prevState) => ({\n            ...prevState,\n            pokemonDetail: data || []\n          }));\n\n          setTimeout(() => {\n            setState((prevState) => ({\n              ...prevState,\n              isLoading: false\n            }));\n          }, 1500);\n        }\n        return data;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getPokemonDetailByName();\n  }, [setState, name]);\n\n  return (\n    <StyledSection>\n      <StyledWrapper>\n        <StyledTitle>{name}</StyledTitle>\n        <StyledContent>\n          <StyledImage>\n            {pokemonDetail?.id && (\n              <img\n                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonDetail.id}.png`}\n                width=\"300\"\n                height=\"auto\"\n                alt={name}\n              />\n            )}\n\n            {pokemonDetail?.id && (\n              <StyledRow>\n                <p>\n                  <strong>ID: </strong>\n                  {pokemonDetail.id}\n                </p>\n              </StyledRow>\n            )}\n\n            {pokemonDetail?.base_experience && (\n              <StyledRow>\n                <p>\n                  <strong>Base Experience: </strong>\n                  {pokemonDetail.base_experience}\n                </p>\n              </StyledRow>\n            )}\n\n            {pokemonDetail?.types && (\n              <StyledRow>\n                <StyledTypes>\n                  {pokemonDetail.types.map(({ type }, index) => {\n                    const { name } = type;\n\n                    return (\n                      <StyledBadge\n                        key={`${index}-${name}`}\n                        type={name}\n                      >\n                        {name}\n                      </StyledBadge>\n                    );\n                  })}\n                </StyledTypes>\n              </StyledRow>\n            )}\n\n            {pokemonDetail?.height && (\n              <StyledRow>\n                <p>\n                  {' '}\n                  <strong>Height: </strong>\n                  {pokemonDetail.height}\n                </p>\n              </StyledRow>\n            )}\n            {pokemonDetail?.weight && (\n              <StyledRow>\n                <p>\n                  <strong>Weight: </strong>\n                  {pokemonDetail.weight}\n                </p>\n              </StyledRow>\n            )}\n          </StyledImage>\n          <StyledInfo>\n            {pokemonDetail?.abilities && (\n              <StyledRow>\n                <p>\n                  <strong>Abilities:</strong>\n                </p>\n                {pokemonDetail.abilities.map(({ ability }, index) => {\n                  const { name } = ability;\n\n                  return <p key={`${index}-${name}`}>{name}</p>;\n                })}\n              </StyledRow>\n            )}\n\n            {pokemonDetail?.stats && (\n              <StyledRow>\n                <p>\n                  <strong>Stats:</strong>\n                </p>\n                {pokemonDetail.stats.map(\n                  ({ stat, base_stat }, index) => {\n                    const { name } = stat;\n\n                    return (\n                      <StyledLabel>\n                        <p>{name}</p>\n                        <StyledBar>\n                          <StyledProgress\n                            key={`${index}-${name}`}\n                            progress={base_stat}\n                          />\n                          <p>{base_stat}</p>\n                        </StyledBar>\n                      </StyledLabel>\n                    );\n                  }\n                )}\n              </StyledRow>\n            )}\n          </StyledInfo>\n        </StyledContent>\n      </StyledWrapper>\n    </StyledSection>\n  );\n};\n\nexport default PokemonDetail;\n","import styled from 'styled-components';\nimport { fonts } from 'assets/global/tokens';\n\nexport const StyledSection = styled.section`\n  display: block;\n  width: 100%;\n  padding: 50px 0;\n`;\n\nexport const StyledTitle = styled.h2`\n  font-family: ${fonts.primary};\n  font-size: 32px;\n  font-weight: 700;\n\n  @media screen and (max-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (max-width: 420px) {\n    font-size: 20px;\n  }\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin: -10px;\n  padding: 0;\n`;\n","import React, { useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Context } from 'context';\nimport PokemonItem from 'components/Pokemon/Item';\nimport { StyledWrapper } from 'assets/global/styled';\nimport { StyledSection, StyledTitle, StyledList } from './styled';\nimport { getPokemonsByGeneration } from 'api';\n\nconst PokemonsByGeneration = () => {\n  const { id } = useParams();\n  const { state, setState } = useContext(Context);\n  const { pokemonsByGeneration, currentGeneration } = state;\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true\n    }));\n\n    async function getPokemonsGenerationList() {\n      try {\n        const payload = await getPokemonsByGeneration(id);\n        const data = payload?.data || {};\n\n        if (data) {\n          setState((prevState) => ({\n            ...prevState,\n            pokemonsByGeneration: data.pokemon_species || []\n          }));\n\n          setTimeout(() => {\n            setState((prevState) => ({\n              ...prevState,\n              isLoading: false\n            }));\n          }, 1500);\n        }\n        return data;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getPokemonsGenerationList();\n  }, [setState, id]);\n\n  return (\n    <StyledSection>\n      <StyledWrapper>\n        <StyledTitle>{currentGeneration}</StyledTitle>\n        <StyledList>\n          {pokemonsByGeneration.map((pokemon, index) => {\n            const { name, url } = pokemon;\n            const id = url.substring(\n              url.lastIndexOf('/pokemon-species/') + 17,\n              url.length - 1\n            );\n\n            return <PokemonItem key={index} name={name} id={id} />;\n          })}\n        </StyledList>\n      </StyledWrapper>\n    </StyledSection>\n  );\n};\n\nexport default PokemonsByGeneration;\n","export default __webpack_public_path__ + \"static/media/icon-pokeball.b2fd87ff.svg\";","import styled, { css, keyframes } from 'styled-components';\nimport { colors } from 'assets/global/tokens';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const StyledLoading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 99;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: ${colors.white};\n  opacity: 0;\n  visibility: hidden;\n  transform: scale(1.1);\n  transform: scale3d(1.1, 1.1, 1.1);\n\n  img {\n    max-width: 150px;\n    height: auto;\n    animation: ${rotate} 0.5s linear infinite;\n  }\n\n  ${(props) =>\n    props.isLoading &&\n    css`\n      opacity: 1;\n      visibility: visible;\n      transform: scale(1);\n      transform: scale3d(1, 1, 1);\n    `}\n`;\n","import React from 'react';\nimport IconPokeball from 'assets/images/icon-pokeball.svg';\nimport { StyledLoading } from './styled';\n\nconst Loading = ({ isLoading }) => {\n  return (\n    <StyledLoading isLoading={isLoading}>\n      <img src={IconPokeball} alt=\"Carregando\" />\n    </StyledLoading>\n  );\n};\n\nexport default Loading;\n","import React, { useContext } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Context } from 'context';\nimport Header from 'components/Header';\nimport PokemonsList from 'containers/PokemonsList';\nimport GenerationsList from 'containers/GenerationsList';\nimport PokemonDetail from 'containers/PokemonDetail';\nimport PokemonsByGeneration from 'containers/PokemonsByGeneration';\nimport Loading from 'components/Loading';\n\nconst App = () => {\n  const { state } = useContext(Context);\n  const { isLoading } = state;\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={PokemonsList} />\n        <Route\n          exact\n          path=\"/generations\"\n          component={GenerationsList}\n        />\n        <Route\n          exact\n          path=\"/pokemon/:name\"\n          component={PokemonDetail}\n        />\n        <Route\n          exact\n          path=\"/generation/:id\"\n          component={PokemonsByGeneration}\n        />\n      </Switch>\n      <Loading isLoading={isLoading} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { GlobalState } from 'context';\nimport App from 'containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <GlobalState>\n        <App />\n      </GlobalState>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}